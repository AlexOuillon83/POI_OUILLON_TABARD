@using Isen.DotNet.Library.Models.Implementation;
@{
    ViewData["Title"] = "Points Interets Touristiques";
}
@model IEnumerable<PointInteret>

<style>
    .mapboxgl-popup {
        max-width: 400px;
        font: 12px/20px 'Helvetica Neue', Arial, Helvetica, sans-serif;
    }

    #form {
        display: inline-block;
    }
    #map { position:absolute; top:55%; bottom:0; width:40%; height: 40%;}
    </style>

<div class="top">
    <div class="row">
        <div class="col-md-12">
            <h1>Points Intérêts Touristiques <small>/poi/index</small></h1>
        </div>
    </div>
    <div class="row">
        <a class="btn btn-default" 
            asp-controller="PointInteret" asp-action="Detail">Ajouter un point d'intérêt...</a>
    </div>
    <div class="row">
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>#</th>
                    <th>Nom</th>
                    <th>Descriptif</th>
                    <th>Departement</th>
                    <th>Commune</th>
                    <th>Code Postal</th>
                    <th>Adresse</th>
                    <th>Categorie</th>
                </tr>
            </thead>
            <tbody>
                
                @foreach(var poi in Model)
                {
                <tr>
                    <td>@poi.Id</td>
                    <td>@poi.Name</td>
                    <td>@poi.Descriptif</td>
                    <td>@poi.Adresse?.Departement?.Nom </td>
                    <td>@poi.Adresse?.Commune?.Name</td>
                    <td>@poi.Adresse?.ZipCode</td>
                    <td>@poi.Adresse?.Texte</td>
                    <td>@poi.Categorie?.Nom</td> 
                    <td>
                        <a class="btn btn-default" asp-controller="PointInteret" asp-action="Detail" asp-route-id="@poi.Id">Editer</a>
                        &nbsp;
                        <a class="btn btn-danger" asp-controller="PointInteret" asp-action="Delete" asp-route-id="@poi.Id">Supprimer</a>
                    </td>
                </tr>
                }
            </tbody>
        </table>
    </div>
</div>


<div class="bottom">
    <div id='map'>
            <script>
            mapboxgl.accessToken = 'pk.eyJ1IjoiYWxlb3VpIiwiYSI6ImNqZHZ2MjkzODA2MHgycW82cXdkY3lvdWEifQ.UFCTus7NNm98ZZvqab9v2A';


                var map = new mapboxgl.Map({
                    container: 'map',
                    style: 'mapbox://styles/mapbox/streets-v9',
                    center: [6.5, 44],
                    zoom: 5
                });
            var marker = new mapboxgl.Marker()
            .setLngLat([6.5, 44.5])
            .addTo(map);

            map.on('load', function () {
                // Add a layer showing the places.
                map.addLayer({
                    "id": "places",
                    "type": "symbol",
                    "source": {
                        "type": "geojson",
                        "data": {
                            "type": "FeatureCollection",
                            "features": [
                            {
                                "type": "Feature",
                                "properties": {
                                    "description": "<strong>Make it Mount Pleasant</strong><p><a href=\"http://www.mtpleasantdc.com/makeitmtpleasant\" target=\"_blank\" title=\"Opens in a new window\">Make it Mount Pleasant</a> is a handmade and vintage market and afternoon of live entertainment and kids activities. 12:00-6:00 p.m.</p>",
                                    "icon": "theatre"
                                },
                                "geometry": {
                                    "type": "Point",
                                    "coordinates": [6.5, 43.31567]
                                }
                            }]
                        }
                    },
                    "layout": {
                        "icon-image": "{icon}-15",
                        "icon-allow-overlap": true
                    }
                });

                // When a click event occurs on a feature in the places layer, open a popup at the
                // location of the feature, with description HTML from its properties.
                map.on('click', 'places', function (e) {
                    var coordinates = e.features[0].geometry.coordinates.slice();
                    var description = e.features[0].properties.description;

                    // Ensure that if the map is zoomed out such that multiple
                    // copies of the feature are visible, the popup appears
                    // over the copy being pointed to.
                    while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {
                        coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;
                    }

                    new mapboxgl.Popup()
                        .setLngLat(coordinates)
                        .setHTML(description)
                        .addTo(map);
                });

                // Change the cursor to a pointer when the mouse is over the places layer.
                map.on('mouseenter', 'places', function () {
                    map.getCanvas().style.cursor = 'pointer';
                });

                // Change it back to a pointer when it leaves.
                map.on('mouseleave', 'places', function () {
                    map.getCanvas().style.cursor = '';
                });
            });
        </script>
    </div>
</div>
